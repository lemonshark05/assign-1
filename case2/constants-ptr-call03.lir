f1:&(int) -> int
f2:&(int, &int) -> int
test:&(int, &int) -> int

extern e1:() -> int
extern e2:(&int) -> int

fn f1(p:int) -> int {
entry:
  $ret 0
}

fn f2(p:int, q:&int) -> int {
entry:
  $ret 0
}

fn main() -> int {
entry:
  $ret 0
}

fn test(p:int, q:&int) -> int {
let _lo1:int, _lo2:int, _lo3:int, _lo4:int, _lo5:int, _lo6:int, _lo7:int, _lo8:int, _lo9:int, _t10:int, _t100:&int, _t101:int, _t102:int, _t103:int, _t104:int, _t105:&&int, _t106:&int, _t107:int, _t108:int, _t109:&int, _t11:int, _t110:int, _t111:&&&(int, &int) -> int, _t112:&&(int, &int) -> int, _t113:int, _t114:&&(int, &int) -> int, _t115:&(int, &int) -> int, _t116:int, _t117:int, _t118:int, _t119:int, _t12:&&(int, &int) -> int, _t120:int, _t121:int, _t122:int, _t123:&&&int, _t124:&&int, _t125:&int, _t126:int, _t127:int, _t128:&&int, _t129:&int, _t13:&(int, &int) -> int, _t130:int, _t131:&int, _t132:int, _t133:int, _t14:&&(int, &int) -> int, _t15:&(int, &int) -> int, _t16:&&int, _t17:&int, _t18:int, _t19:int, _t20:&&&&int, _t21:&&&int, _t22:&&&(int, &int) -> int, _t23:int, _t24:int, _t25:&&int, _t26:&int, _t27:int, _t28:&int, _t29:int, _t30:int, _t31:&&int, _t32:&int, _t33:&int, _t34:int, _t35:&int, _t36:int, _t37:int, _t38:&int, _t39:&&(int, &int) -> int, _t40:int, _t41:&int, _t42:int, _t43:&(int, &int) -> int, _t44:int, _t45:int, _t46:int, _t47:int, _t48:int, _t49:&int, _t50:int, _t51:int, _t52:int, _t53:&&(int, &int) -> int, _t54:&(int, &int) -> int, _t55:int, _t56:int, _t57:int, _t58:int, _t59:int, _t60:int, _t61:&&&int, _t62:&&int, _t63:&int, _t64:int, _t65:&&(int, &int) -> int, _t66:&(int, &int) -> int, _t67:int, _t68:int, _t69:&int, _t70:int, _t71:int, _t72:int, _t73:int, _t74:int, _t75:int, _t76:int, _t77:int, _t78:&int, _t79:int, _t80:&&int, _t81:&int, _t82:int, _t83:&&&() -> int, _t84:&&() -> int, _t85:&() -> int, _t86:&int, _t87:&int, _t88:int, _t89:&&int, _t90:&int, _t91:int, _t92:int, _t93:int, _t94:int, _t95:&int, _t96:int, _t97:int, _t98:int, _t99:&&int, id0:&int, id1:int, id10:&&(int, &int) -> int, id11:&(int, &int) -> int, id12:&(int, &int) -> int, id13:&int, id14:&&int, id15:&&(int, &int) -> int, id16:&&(int, &int) -> int, id17:&&(int, &int) -> int, id18:&int, id19:&&&int, id2:int, id20:&&&&int, id21:&&int, id22:&&() -> int, id23:&&&() -> int, id24:&&int, id25:&&&(int, &int) -> int, id26:&&(int, &int) -> int, id3:&int, id4:&&int, id5:&(int, &int) -> int, id6:&&&(int, &int) -> int, id7:&&int, id8:int, id9:int
bb1:
  _t19 = $arith sub 0 _t18
  _t20 = $gep id20 _t19
  _t21 = $load _t20
  id19 = $copy _t21
  id23 = $copy id23
  id24 = $copy id7
  id26 = $copy id26
  _t22 = $addrof id26
  id25 = $copy _t22
  $call_ext e2(id0)
  id1 = $copy id2
  _t23 = $arith sub 0 9
  _t24 = $cmp lt _t23 8
  _t25 = $gep id4 _t24
  _t26 = $load _t25
  _t27 = $call_ext e2(_t26)
  _t28 = $gep q _t27
  _t29 = $load _t28
  $branch _t29 bb3 bb4

bb10:
  _t41 = $load id14
  _t42 = $call_idr id11(_t40, _t41) then bb11

bb11:
  _t39 = $gep id10 _t42
  _t43 = $load _t39
  $call_idr _t43(_t37, _t38) then bb9

bb12:
  p = $copy _t55
  $call_ext e2(id13)
  id2 = $copy id1
  $jump bb5

bb13:
  _t56 = $arith sub 0 3
  _t57 = $call_ext e1()
  _t58 = $arith div _t56 _t57
  _t59 = $cmp lte _t58 _lo1
  _t60 = $arith sub 0 9
  _t61 = $gep id19 _t60
  _t62 = $load _t61
  _t63 = $load _t62
  _t64 = $call_ext e2(id18)
  _t65 = $gep id15 _t64
  _t66 = $load _t65
  _t67 = $call_idr _t66(_t59, _t63) then bb16

bb14:
  _lo1 = $copy 0
  $jump bb13

bb15:
  _lo1 = $copy 1
  $jump bb13

bb16:
  _t68 = $cmp lte _t67 id9
  id1 = $copy _t68
  $branch id2 bb18 bb19

bb17:
  _t70 = $call_dir f1(_lo2) then bb20

bb18:
  _lo2 = $copy 0
  $jump bb17

bb19:
  _lo2 = $copy 1
  $jump bb17

bb2:
  _t122 = $call_ext e1()
  _t123 = $gep id19 _t122
  _t124 = $load _t123
  _t125 = $load _t124
  _t126 = $load _t125
  _t127 = $call_dir test(id2, id0) then bb55

bb20:
  _t69 = $gep q _t70
  _t71 = $call_ext e1()
  $store _t69 _t71
  $jump bb2

bb21:
  _t87 = $addrof p
  _t88 = $call_dir f2(p, _t87) then bb37

bb22:
  _t73 = $call_dir f1(0) then bb24

bb23:
  _t76 = $arith sub 0 10
  _lo5 = $copy _t76
  _t77 = $cmp neq _lo5 0
  $branch _t77 bb32 bb31

bb24:
  $branch _t73 bb26 bb27

bb25:
  _t74 = $call_ext e2(id3)
  _t75 = $arith add _lo3 _t74
  $branch _t75 bb29 bb30

bb26:
  _lo3 = $copy 0
  $jump bb25

bb27:
  _lo3 = $copy 1
  $jump bb25

bb28:
  id8 = $copy _lo4
  $jump bb21

bb29:
  _lo4 = $copy 0
  $jump bb28

bb3:
  $jump bb5

bb30:
  _lo4 = $copy 1
  $jump bb28

bb31:
  _t80 = $gep id4 _lo5
  _t81 = $load _t80
  $call_dir test(id1, _t81) then bb33

bb32:
  _t78 = $addrof id8
  _t79 = $load _t78
  _lo5 = $copy _t79
  $jump bb31

bb33:
  _t82 = $cmp eq id13 id0
  $branch _t82 bb35 bb36

bb34:
  _t83 = $gep id23 _lo6
  _t84 = $load _t83
  _t85 = $load _t84
  $store id22 _t85
  _t86 = $addrof p
  id18 = $copy _t86
  $jump bb21

bb35:
  _lo6 = $copy 0
  $jump bb34

bb36:
  _lo6 = $copy 1
  $jump bb34

bb37:
  id8 = $copy _t88
  _t89 = $load id19
  _t90 = $load _t89
  _t91 = $call_ext e2(_t90)
  $branch _t91 bb39 bb40

bb38:
  _t108 = $arith sub 0 10
  $branch _t108 bb48 bb49

bb39:
  _t92 = $arith sub 0 7
  p = $copy _t92
  _t93 = $call_ext e1()
  $branch _t93 bb42 bb43

bb4:
  _t72 = $arith sub 0 6
  id9 = $copy _t72
  id9 = $copy id9
  $branch 4 bb22 bb23

bb40:
  _t99 = $gep id24 id2
  _t100 = $load _t99
  _t101 = $load _t100
  id2 = $copy _t101
  _t102 = $call_ext e1()
  _t103 = $arith sub 0 10
  _t104 = $call_dir f1(_t103) then bb45

bb41:
  _t94 = $arith sub 0 _lo7
  _t95 = $addrof id2
  $call_dir test(_t94, _t95) then bb44

bb42:
  _lo7 = $copy 0
  $jump bb41

bb43:
  _lo7 = $copy 1
  $jump bb41

bb44:
  id3 = $alloc 1 [_alloc1]
  _t96 = $arith sub 0 7
  _t97 = $cmp eq _t96 id2
  p = $copy _t97
  _t98 = $arith sub 0 5
  p = $copy _t98
  $jump bb38

bb45:
  _t105 = $gep id4 _t104
  _t106 = $load _t105
  $call_dir f2(_t102, _t106) then bb46

bb46:
  _t107 = $arith sub 0 5
  id8 = $copy _t107
  $call_ext e1()
  $call_ext e1()
  $jump bb38

bb47:
  _t109 = $addrof id2
  _t110 = $load _t109
  _t111 = $gep id25 id8
  _t112 = $load _t111
  _t113 = $arith sub 0 _lo8
  _t114 = $gep _t112 _t113
  _t115 = $load _t114
  _t116 = $call_idr _t115(_t110, q) then bb50

bb48:
  _lo8 = $copy 0
  $jump bb47

bb49:
  _lo8 = $copy 1
  $jump bb47

bb5:
  _t30 = $arith sub 0 id8
  _t31 = $gep id7 _t30
  _t32 = $load _t31
  _t33 = $gep _t32 id1
  _t34 = $load _t33
  _t35 = $addrof id9
  _t36 = $call_idr id5(_t34, _t35) then bb8

bb50:
  id2 = $copy _t116
  _t117 = $arith sub 0 6
  $branch _t117 bb52 bb53

bb51:
  _t118 = $cmp lte _lo9 id1
  _t119 = $call_dir f1(_t118) then bb54

bb52:
  _lo9 = $copy 0
  $jump bb51

bb53:
  _lo9 = $copy 1
  $jump bb51

bb54:
  _t120 = $arith sub 0 7
  _t121 = $arith mul _t119 _t120
  $store id3 _t121
  $jump bb2

bb55:
  _t128 = $gep id4 _t127
  _t129 = $load _t128
  _t130 = $cmp neq id3 id13
  _t131 = $gep _t129 _t130
  _t132 = $load _t131
  _t133 = $cmp eq _t126 _t132
  $ret _t133

bb6:
  $store q id2
  _t37 = $arith sub 0 3
  _t38 = $load id4
  _t40 = $call_dir f2(id2, id13) then bb10

bb7:
  $branch 5 bb14 bb15

bb8:
  $branch _t36 bb6 bb7

bb9:
  _t44 = $arith sub 0 id8
  _t45 = $call_ext e1()
  _t46 = $cmp gte _t44 _t45
  _t47 = $arith sub 0 _t46
  id1 = $copy _t47
  _t48 = $arith sub 0 9
  id2 = $copy _t48
  _t49 = $load id7
  _t50 = $load _t49
  _t51 = $arith sub 0 9
  _t52 = $arith sub 0 _t51
  _t53 = $gep id15 _t52
  _t54 = $load _t53
  _t55 = $call_idr _t54(_t50, id3) then bb12

entry:
  _t10 = $load id0
  id1 = $copy _t10
  _t11 = $load id3
  id2 = $copy _t11
  id6 = $copy id6
  _t12 = $load id6
  _t13 = $load _t12
  id5 = $copy _t13
  _t14 = $addrof f2
  _t15 = $load _t14
  id12 = $copy _t15
  id11 = $copy id12
  id16 = $copy id17
  id15 = $copy id16
  id21 = $copy id7
  _t16 = $gep id21 10
  _t17 = $load _t16
  _t18 = $call_dir f2(id1, _t17) then bb1
}