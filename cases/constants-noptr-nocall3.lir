test:&() -> int

fn main() -> int {
entry:
  $ret 0
}

fn test() -> int {
let _lo1:int, _lo2:int, _t3:int, _t4:int, _t5:int, _t6:int, _t7:int, _t8:int, _t9:int, id0:int, id1:int, id2:int
bb1:
  id2 = $copy _lo1
  id1 = $copy 2
  _lo2 = $copy 0
  _t6 = $cmp eq _lo2 0
  $branch _t6 bb4 bb3

bb2:
  _t4 = $arith sub 0 2
  _t5 = $arith sub 0 _t4
  _lo1 = $copy _t5
  $jump bb1

bb3:
  _t7 = $cmp lte id0 id1
  _t8 = $cmp neq id1 _lo2
  _t9 = $arith mul _t7 _t8
  id0 = $copy _t9
  $ret 0

bb4:
  _lo2 = $copy id2
  $jump bb3

entry:
  id0 = $copy id1
  _lo1 = $copy 1
  _t3 = $cmp eq _lo1 0
  $branch _t3 bb2 bb1
}